version: "3.8"

services:
  db:
    image: "postgres:latest"
    expose:
      - "5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      #PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - databases

  apidoc:
    image: "redocly/redoc:latest"
    ports:
      - "7000:80"
    volumes:
      - ./api.yaml:/usr/share/nginx/html/api.yaml
    environment:
      - SPEC_URL=api.yaml
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://0.0.0.0:80 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  
  render:
    build:
      context: ./render
      dockerfile: ./local-dockerfiles/render
      args:
        buildno: 1
    ports:
      - "4000:4000"
    volumes:
      - ./render:/usr/src/app
    networks: 
      - databases
    environment:
      - PORT=4000
    command: bash -c "npm install && npm start"
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://0.0.0.0:4000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  
  backend:
    build:
      context: ./backend
      dockerfile: ./local-dockerfiles/backend
      args:
        buildno: 1
    ports:
      - "3000:3000"
    volumes:
      - ./backend/:/usr/src/app
    links:
      - db
    networks: 
      - databases
    command: bash -c "npm install && bash ./wait-for-it.sh db:5432 -q && npm start"
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://0.0.0.0:3000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  
  frontend:
    build:
      context: ./frontend
      dockerfile: ./local-dockerfiles/frontend
      args:
        buildno: 1
    ports:
      - "5000:5000"
    volumes:
      - ./frontend/:/usr/src/app
    links:
      - db
      - backend
      - render
    networks: 
      - databases
    command: bash -c "npm install && npm start"
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://0.0.0.0:5000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      
  pgadmin:
    image: "dpage/pgadmin4:latest"
    ports:
      - "5050:80"
    links:
      - db
    networks: 
      - databases
    environment:
      - PGADMIN_DEFAULT_EMAIL=developer@sajdl.com
      - PGADMIN_DEFAULT_PASSWORD=LocalDeveloper123456
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://0.0.0.0:80 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

volumes:
  pgdata: {}

networks: 
  databases: